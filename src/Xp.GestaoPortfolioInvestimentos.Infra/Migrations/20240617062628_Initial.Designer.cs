// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Xp.GestaoPortfolioInvestimentos.Infra.Context;

#nullable disable

namespace Xp.GestaoPortfolioInvestimentos.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240617062628_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Xp.GestaoPortfolioInvestimentos.Domain.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Xp.GestaoPortfolioInvestimentos.Domain.Entidades.Investimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProdutoInvestimentoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("StatusInvestimento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoInvestimentoId");

                    b.ToTable("Investimento", (string)null);
                });

            modelBuilder.Entity("Xp.GestaoPortfolioInvestimentos.Domain.Entidades.ProdutoInvestimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TipoProdutoInvestimento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProdutoInvestimento", (string)null);
                });

            modelBuilder.Entity("Xp.GestaoPortfolioInvestimentos.Domain.Entidades.Cliente", b =>
                {
                    b.OwnsOne("Xp.GestaoPortfolioInvestimentos.Domain.ValueObjects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Documento")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("varchar(100)")
                                .HasColumnName("Cpf");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Cliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("Xp.GestaoPortfolioInvestimentos.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnType("varchar(100)")
                                .HasColumnName("Email");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Cliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.Navigation("Cpf")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("Xp.GestaoPortfolioInvestimentos.Domain.Entidades.Investimento", b =>
                {
                    b.HasOne("Xp.GestaoPortfolioInvestimentos.Domain.Entidades.Cliente", "Cliente")
                        .WithMany("Investimentos")
                        .HasForeignKey("ClienteId")
                        .IsRequired();

                    b.HasOne("Xp.GestaoPortfolioInvestimentos.Domain.Entidades.ProdutoInvestimento", "ProdutoInvestimento")
                        .WithMany()
                        .HasForeignKey("ProdutoInvestimentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_ProdutoInvestimentoProdutoInvestimentoId");

                    b.Navigation("Cliente");

                    b.Navigation("ProdutoInvestimento");
                });

            modelBuilder.Entity("Xp.GestaoPortfolioInvestimentos.Domain.Entidades.Cliente", b =>
                {
                    b.Navigation("Investimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
